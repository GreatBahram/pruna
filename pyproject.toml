[project]
name = "pruna"
version = "0.2.5"
description = "Smash your AI models"
authors = [{ name = "Pruna AI", email = "hello@pruna.ai" }]
requires-python = ">=3.9,<3.13"
license = "Apache-2.0"
dependencies = [
    "wget",
    "torch==2.7.0",
    "torchvision==0.22.0",
    "torchmetrics[image]",
    "requests>=2.31.0",
    "transformers",
    "pillow>=9.5.0",
    "pytorch-lightning",
    "huggingface-hub[hf-xet]>=0.30.0",
    "datasets>=0.34",
    "jsonschema",
    "numpy>=1.24.4",
    "setuptools",
    "packaging",
    "diffusers>=0.21.4",
    "platformdirs",
    "torch_pruning",
    "python-dotenv",
    "ConfigSpace>=1.2.1",
    "cython",
    "lago-python-client",
    "sentencepiece",
    "blobfile",
    "librosa",
    "openvino",
    "soundfile",
    "ipywidgets>=8.1.5",
    "DeepCache",
    "colorama",
    "protobuf",
    "peft",
    "optuna",
    "trl",
    "opentelemetry-api>=1.30.0",
    "opentelemetry-sdk>=1.30.0",
    "opentelemetry-exporter-otlp>=1.29.0",
    "codecarbon",
    "pynvml",
    "thop",
    "timm",
    "bitsandbytes",
    "optimum-quanto>=0.2.5",
    "optimum",
    "ctranslate2==4.5.0",
    "whisper-s2t==1.3.0",
    "hqq",
    "torchao",
    "llmcompressor",
]

[project.optional-dependencies]
stable-fast = [
    "xformers==0.0.30",
    "stable-fast-pruna==1.0.7 ; extra == 'stable-fast' or extra == 'full'",
]
gptq = ["gptqmodel"]
full = [
    "xformers==0.0.30",
    "stable-fast-pruna==1.0.7 ; extra == 'stable-fast' or extra == 'full'",
]
dev = [
    "jupyterlab",
    "notebook",
    "pre-commit",
    "build",
    "twine",
    "pyc-wheel",
    "ruff",
    "numpydoc-validation",
]
tests = [
    "pytest==7.4.4",
    "pytest-cov",
    "coverage",
    "docutils",
    "jupyterlab",
    "numpydoc-validation",
    "mypy",
    "ruff",
    "types-PyYAML",
]
cpu = []

[tool.ruff]
exclude = ["test_*.py"]
line-length = 121

[tool.ruff.lint]
ignore = [
    "ANN002",
    "ANN003",
    "ANN401",
    "C901",
    "D100",
    "D104",
    "D401",
    "D406",
    "C408",
]
select = [
    "A",
    "C",
    "CPY",
    "D",
    "E",
    "ERA",
    "F",
    "FIX",
    "I",
    "N",
    "SIM",
    "T20",
    "W",
    "FA",
]
preview = true # enable preview features for copyright checking

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["ERA", "CPY", "T"] # commented out code is intended for tutorials
"tests/*" = ["T20", "CPY"]      # print statements are intended for tests
"docs/*" = ["CPY"]

# TODO: ask pruna people together find a way for handling this
[tool.hatch.build.targets.sdist]
include = ["**/*.so"]
exclude = ["tests*", "docs*"]

[tool.hatch.build.targets.wheel]
include = ["**/*.so"]
exclude = ["tests*", "docs*"]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-copyright]
author = "- Pruna AI GmbH"

[tool.mypy]
ignore_missing_imports = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["pruna"]
exclude = ["openai", "docker", "saved_model"]
